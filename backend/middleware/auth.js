// backend/middleware/auth.js
const jwt = require('jsonwebtoken');
const User = require('../model/User');

module.exports = async function auth(req, res, next) {
  // ‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á Authorization: Bearer <token> ‡πÅ‡∏•‡∏∞ x-auth-token
  const authHeader = req.headers.authorization || '';
  const token = authHeader.startsWith('Bearer ')
    ? authHeader.slice(7)
    : (req.header('x-auth-token') || '');

  if (!token) return res.status(401).json({ message: 'Unauthorized' });

  try {
    const decoded = jwt.verify(token, process.env.JWT_SECRET);
    const id = decoded.id || decoded.userId || decoded._id;

    // üîé ‡∏î‡∏∂‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‚Äú‡∏™‡∏î‡πÜ‚Äù ‡∏à‡∏≤‡∏Å DB ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
    // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô
    const user = await User.findById(id).select('_id role username status').lean();
    if (!user) return res.status(401).json({ message: 'Unauthorized' });

    // ‚õî ‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏ñ‡πâ‡∏≤‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ñ‡∏π‡∏Å‡∏£‡∏∞‡∏á‡∏±‡∏ö
    if (user.status === 'suspended') {
      return res.status(403).json({ message: '‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏£‡∏∞‡∏á‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß' });
    }

    // ‡∏ú‡∏π‡∏Å user ‡∏•‡∏á req ‡πÉ‡∏´‡πâ route ‡∏≠‡∏∑‡πà‡∏ô‡πÉ‡∏ä‡πâ‡∏ï‡πà‡∏≠
    req.user = {
      _id: String(user._id),  // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ _id (‡πÄ‡∏ä‡πà‡∏ô‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á wishlists router)
      id: String(user._id),
      role: user.role,
      username: user.username,
      status: user.status,
    };

    return next();
  } catch (err) {
    return res.status(401).json({ message: 'Invalid token' });
  }
};
